{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { Store } from '@tanstack/store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport { GetFrameworkGeneric } from './frameworks'\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ValidFromPath,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  parsePathname,\n  resolvePath,\n  trimPath,\n  trimPathLeft,\n} from './path'\nimport {\n  Route,\n  AnySearchSchema,\n  AnyRoute,\n  RootRoute,\n  AnyContext,\n} from './route'\nimport { RoutesInfo, AnyRoutesInfo, RoutesById } from './routeInfo'\nimport { AnyRouteMatch, RouteMatch, RouteMatchStore } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n  partialDeepEqual,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\n\nexport interface Register {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any>\n\nexport type RegisteredRouter = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? Router<TRoute, TRoutesInfo>\n  : Router\n\nexport type RegisteredRoutesInfo = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? TRoutesInfo\n  : AnyRoutesInfo\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\nexport type FilterRoutesFn = <TRoute extends AnyRoute>(\n  routes: TRoute[],\n) => TRoute[]\n\ntype RouterContextOptions<TRouteTree extends AnyRoute> =\n  AnyContext extends TRouteTree['__types']['routerContext']\n    ? {\n        context?: TRouteTree['__types']['routerContext']\n      }\n    : {\n        context: TRouteTree['__types']['routerContext']\n      }\n\nexport interface RouterOptions<TRouteTree extends AnyRoute> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  filterRoutes?: FilterRoutesFn\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: GetFrameworkGeneric<'Component'>\n  defaultErrorComponent?: GetFrameworkGeneric<'ErrorComponent'>\n  defaultPendingComponent?: GetFrameworkGeneric<'Component'>\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeTree?: TRouteTree\n  basepath?: string\n  Router?: (router: AnyRouter) => void\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  loadComponent?: (\n    component: GetFrameworkGeneric<'Component'>,\n  ) => Promise<GetFrameworkGeneric<'Component'>>\n  onRouteChange?: () => void\n  fetchServerDataFn?: FetchServerDataFn\n  context?: TRouteTree['__types']['routerContext']\n}\n\ntype FetchServerDataFn = (ctx: {\n  router: AnyRouter\n  routeMatch: RouteMatch\n}) => Promise<any>\n\nexport interface RouterStore<\n  TRoutesInfo extends AnyRoutesInfo = AnyRoutesInfo,\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  latestLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  currentMatches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  currentLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  pendingMatches?: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  pendingLocation?: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __matches?: RouteMatch[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  includeSearch?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<\n    RouterStore,\n    'status' | 'latestLocation' | 'currentLocation' | 'lastUpdated'\n  > {\n  currentMatches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter {\n  state: DehydratedRouterState\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  id: string\n  state: Pick<RouteMatchStore<any, any>, 'status'>\n}\n\nexport interface RouterContext {}\n\nexport const defaultFetchServerDataFn: FetchServerDataFn = async ({\n  router,\n  routeMatch,\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: (d: any) => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id,\n      },\n    }),\n  })\n\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal,\n  })\n\n  if (res.ok) {\n    return res.json()\n  }\n\n  throw new Error('Failed to fetch match data')\n}\n\nexport type RouterConstructorOptions<TRouteTree extends AnyRoute> = Omit<\n  RouterOptions<TRouteTree>,\n  'context'\n> &\n  RouterContextOptions<TRouteTree>\n\nexport class Router<\n  TRouteTree extends AnyRoute = RootRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteTree>,\n> {\n  types!: {\n    // Super secret internal stuff\n    RootRoute: TRouteTree\n    RoutesInfo: TRoutesInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteTree>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath: string\n  // __location: Location<TRoutesInfo['fullSearchSchema']>\n  routeTree!: RootRoute\n  routesById!: RoutesById<TRoutesInfo>\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  __store: Store<RouterStore<TRoutesInfo>>\n  state: RouterStore<TRoutesInfo>\n  startedLoadingAt = Date.now()\n  resolveNavigation: () => void = () => {}\n\n  constructor(options?: RouterConstructorOptions<TRouteTree>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.__store = new Store<RouterStore<TRoutesInfo>>(\n      getInitialRouterState(),\n      {\n        onUpdate: (state) => {\n          this.state = state\n        },\n      },\n    )\n    this.state = this.__store.state\n    this.basepath = ''\n\n    this.update(options)\n\n    // Allow frameworks to hook into the router creation\n    this.options.Router?.(this)\n\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true,\n    })\n\n    if (this.state.latestLocation.href !== next.href) {\n      this.#commitLocation({ ...next, replace: true })\n    }\n  }\n\n  reset = () => {\n    this.__store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, start loading the matches\n      if (!this.state.currentMatches.length) {\n        this.safeLoad()\n      }\n    }\n\n    return () => {}\n  }\n\n  update = (opts?: RouterOptions<TRouteTree>): this => {\n    Object.assign(this.options, opts)\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      const parsedLocation = this.#parseLocation()\n\n      this.__store.setState((s) => ({\n        ...s,\n        latestLocation: parsedLocation,\n        currentLocation: parsedLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.latestLocation),\n        })\n      })\n    }\n\n    const { basepath, routeTree } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeTree) {\n      this.routesById = {} as any\n      this.routeTree = this.#buildRouteTree(routeTree)\n    }\n\n    return this\n  }\n\n  buildNext = (opts: BuildNextOptions) => {\n    const next = this.#buildLocation(opts)\n\n    const __matches = this.matchRoutes(next.pathname)\n\n    return this.#buildLocation({\n      ...opts,\n      __matches,\n    })\n  }\n\n  cancelMatches = () => {\n    ;[\n      ...this.state.currentMatches,\n      ...(this.state.pendingMatches || []),\n    ].forEach((match) => {\n      match.cancel()\n    })\n  }\n\n  safeLoad = (opts?: { next?: ParsedLocation }) => {\n    this.load(opts).catch((err) => {\n      console.warn(err)\n      invariant(false, 'Encountered an error during router.load()! ☝️.')\n    })\n  }\n\n  load = async (opts?: { next?: ParsedLocation }): Promise<void> => {\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let matches!: RouteMatch<any, any>[]\n\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState((s) => ({\n          ...s,\n          latestLocation: opts.next!,\n        }))\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(this.state.latestLocation.pathname, {\n        strictParseParams: true,\n      })\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        pendingMatches: matches,\n        pendingLocation: this.state.latestLocation,\n      }))\n    })\n\n    // Load the matches\n    await this.loadMatches(\n      matches,\n      this.state.pendingLocation!,\n      // opts\n    )\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const previousMatches = this.state.currentMatches\n\n    const exiting: AnyRouteMatch[] = [],\n      staying: AnyRouteMatch[] = []\n\n    previousMatches.forEach((d) => {\n      if (matches.find((dd) => dd.id === d.id)) {\n        staying.push(d)\n      } else {\n        exiting.push(d)\n      }\n    })\n\n    const entering = matches.filter((d) => {\n      return !previousMatches.find((dd) => dd.id === d.id)\n    })\n\n    now = Date.now()\n\n    exiting.forEach((d) => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n\n      // Clear non-loading error states when match leaves\n      if (d.state.status === 'error') {\n        this.__store.setState((s) => ({\n          ...s,\n          status: 'idle',\n          error: undefined,\n        }))\n      }\n    })\n\n    staying.forEach((d) => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n    })\n\n    entering.forEach((d) => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.state.search,\n      })\n    })\n\n    const prevLocation = this.state.currentLocation\n\n    this.__store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      currentLocation: this.state.latestLocation,\n      currentMatches: matches,\n      pendingLocation: undefined,\n      pendingMatches: undefined,\n    }))\n\n    matches.forEach((match) => {\n      match.__commit()\n    })\n\n    if (prevLocation!.href !== this.state.currentLocation.href) {\n      this.options.onRouteChange?.()\n    }\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TRoutesInfo['routesById']>(\n    id: TId,\n  ): TRoutesInfo['routesById'][TId] => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  loadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.latestLocation,\n  ): Promise<RouteMatch[]> => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n    await this.loadMatches(matches, next)\n    return matches\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.latestLocation,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n\n    await this.loadMatches(matches, next, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (pathname: string, opts?: { strictParseParams?: boolean }) => {\n    const matches: AnyRouteMatch[] = []\n\n    if (!this.routeTree) {\n      return matches\n    }\n\n    const existingMatches = [\n      ...this.state.currentMatches,\n      ...(this.state.pendingMatches ?? []),\n    ]\n\n    const findInRouteTree = async (\n      routes: Route<any, any>[],\n    ): Promise<void> => {\n      const parentMatch = last(matches)\n      let params = parentMatch?.params ?? {}\n\n      const filteredRoutes = this.options.filterRoutes?.(routes) ?? routes\n\n      let matchingRoutes: Route[] = []\n\n      const findMatchInRoutes = (parentRoutes: Route[], routes: Route[]) => {\n        routes.some((route) => {\n          const children = route.children as undefined | Route[]\n          if (!route.path && children?.length) {\n            return findMatchInRoutes(\n              [...matchingRoutes, route],\n              children as any,\n            )\n          }\n\n          const fuzzy = !!(route.path !== '/' || children?.length)\n\n          const matchParams = matchPathname(this.basepath, pathname, {\n            to: route.fullPath,\n            fuzzy,\n            caseSensitive:\n              route.options.caseSensitive ?? this.options.caseSensitive,\n          })\n\n          if (matchParams) {\n            let parsedParams\n\n            try {\n              parsedParams =\n                route.options.parseParams?.(matchParams!) ?? matchParams\n            } catch (err) {\n              if (opts?.strictParseParams) {\n                throw err\n              }\n            }\n\n            params = {\n              ...params,\n              ...parsedParams,\n            }\n          }\n\n          if (!!matchParams) {\n            matchingRoutes = [...parentRoutes, route]\n          }\n\n          return !!matchingRoutes.length\n        })\n\n        return !!matchingRoutes.length\n      }\n\n      findMatchInRoutes([], filteredRoutes)\n\n      if (!matchingRoutes.length) {\n        return\n      }\n\n      matchingRoutes.forEach((foundRoute) => {\n        const interpolatedPath = interpolatePath(foundRoute.path, params)\n        const matchId = interpolatePath(foundRoute.id, params, true)\n\n        const match =\n          existingMatches.find((d) => d.id === matchId) ||\n          new RouteMatch(this, foundRoute, {\n            id: matchId,\n            params,\n            pathname: joinPaths([this.basepath, interpolatedPath]),\n          })\n\n        matches.push(match)\n      })\n\n      const foundRoute = last(matchingRoutes)!\n\n      const foundChildren = foundRoute.children as any\n\n      if (foundChildren?.length) {\n        findInRouteTree(foundChildren)\n      }\n    }\n\n    findInRouteTree([this.routeTree as any])\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: RouteMatch[],\n    location: ParsedLocation,\n    opts?: {\n      preload?: boolean\n      // filter?: (match: RouteMatch<any, any>) => any\n    },\n  ) => {\n    let firstBadMatchIndex: number | undefined\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(\n        resolvedMatches.map(async (match, index) => {\n          try {\n            await match.route.options.beforeLoad?.({\n              router: this as any,\n              match,\n            })\n          } catch (err) {\n            if (isRedirect(err)) {\n              throw err\n            }\n\n            firstBadMatchIndex = firstBadMatchIndex ?? index\n\n            const errorHandler = match.route.options.onBeforeLoadError ?? match.route.options.onError\n            try {\n              errorHandler?.(err)\n            } catch (errorHandlerErr) {\n              if (isRedirect(errorHandlerErr)) {\n                throw errorHandlerErr\n              }\n\n              match.__store.setState((s) => ({\n                ...s,\n                error: errorHandlerErr,\n                status: 'error',\n                updatedAt: Date.now(),\n              }))\n              return\n            }\n\n            match.__store.setState((s) => ({\n              ...s,\n              error: err,\n              status: 'error',\n              updatedAt: Date.now(),\n            }))\n          }\n        }),\n      )\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err as any)\n        }\n        return\n      }\n\n      throw err // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex)\n    const matchPromises = validResolvedMatches.map(async (match, index) => {\n      const parentMatch = validResolvedMatches[index - 1]\n\n      match.__load({ preload: opts?.preload, location, parentMatch })\n\n      await match.__loadPromise\n\n      if (parentMatch) {\n        await parentMatch.__loadPromise\n      }\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <\n    TFrom extends ValidFromPath<TRoutesInfo> = '/',\n    TTo extends string = '',\n  >({\n    from,\n    to = '' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TRoutesInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends ValidFromPath<TRoutesInfo> = '/',\n    TTo extends string = '',\n    TResolved extends string = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n  >(\n    location: ToOptions<TRoutesInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ): false | TRoutesInfo['routesById'][TResolved]['__types']['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    } as any\n\n    const next = this.buildNext(location)\n    const baseLocation = opts?.pending\n      ? this.state.pendingLocation\n      : this.state.currentLocation\n\n    if (!baseLocation) {\n      return false\n    }\n\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname,\n    }) as any\n\n    if (!match) {\n      return false\n    }\n\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false\n    }\n\n    return match\n  }\n\n  buildLink = <\n    TFrom extends ValidFromPath<TRoutesInfo> = '/',\n    TTo extends string = '',\n  >({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TRoutesInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.currentLocation.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact\n      ? this.state.currentLocation.pathname === next.pathname\n      : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash\n      ? this.state.currentLocation.hash === next.hash\n      : true\n    const searchTest =\n      activeOptions?.includeSearch ?? true\n        ? partialDeepEqual(this.state.currentLocation.search, next.search)\n        : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      this.preloadRoute(nextOpts).catch((err) => {\n        console.warn(err)\n        console.warn('Error preloading route! ☝️')\n      })\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter => {\n    return {\n      state: {\n        ...pick(this.state, [\n          'latestLocation',\n          'currentLocation',\n          'status',\n          'lastUpdated',\n        ]),\n        currentMatches: this.state.currentMatches.map((match) => ({\n          id: match.id,\n          state: {\n            status: match.state.status,\n          },\n        })),\n      },\n    }\n  }\n\n  hydrate = (dehydratedRouter: DehydratedRouter) => {\n    this.__store.setState((s) => {\n      // Match the routes\n      const currentMatches = this.matchRoutes(\n        dehydratedRouter.state.latestLocation.pathname,\n        {\n          strictParseParams: true,\n        },\n      )\n\n      currentMatches.forEach((match, index) => {\n        const dehydratedMatch = dehydratedRouter.state.currentMatches[index]\n        invariant(\n          dehydratedMatch && dehydratedMatch.id === match.id,\n          'Oh no! There was a hydration mismatch when attempting to hydrate the state of the router! 😬',\n        )\n        match.__store.setState((s) => ({\n          ...s,\n          ...dehydratedMatch.state,\n        }))\n      })\n\n      return {\n        ...s,\n        ...dehydratedRouter.state,\n        currentMatches,\n      }\n    })\n  }\n\n  #buildRouteTree = (routeTree: AnyRoute) => {\n    const recurseRoutes = (routes: Route[], parentRoute: Route | undefined) => {\n      routes.forEach((route, i) => {\n        route.init({ originalIndex: i, router: this })\n\n        const existingRoute = (this.routesById as any)[route.id]\n\n        invariant(\n          !existingRoute,\n          `Duplicate routes found with id: ${String(route.id)}`,\n        )\n        ;(this.routesById as any)[route.id] = route\n\n        const children = route.children as Route[]\n\n        if (children?.length) {\n          recurseRoutes(children, route)\n\n          route.children = children\n            .map((d, i) => {\n              const parsed = parsePathname(\n                trimPathLeft(cleanPath(d.path ?? '/')),\n              )\n\n              while (parsed.length > 1 && parsed[0]?.value === '/') {\n                parsed.shift()\n              }\n\n              let score = 0\n\n              parsed.forEach((d, i) => {\n                let modifier = 1\n                while (i--) {\n                  modifier *= 0.001\n                }\n                if (d.type === 'pathname' && d.value !== '/') {\n                  score += 1 * modifier\n                } else if (d.type === 'param') {\n                  score += 2 * modifier\n                } else if (d.type === 'wildcard') {\n                  score += 3 * modifier\n                }\n              })\n\n              return { child: d, parsed, index: i, score }\n            })\n            .sort((a, b) => {\n              if (a.score !== b.score) {\n                return a.score - b.score\n              }\n\n              return a.index - b.index\n            })\n            .map((d) => d.child)\n        }\n      })\n    }\n\n    recurseRoutes([routeTree] as Route[], undefined)\n\n    const recurceCheckRoutes = (\n      routes: Route[],\n      parentRoute: Route | undefined,\n    ) => {\n      routes.forEach((route) => {\n        if (route.isRoot) {\n          invariant(\n            !parentRoute,\n            'Root routes can only be used as the root of a route tree.',\n          )\n        } else {\n          invariant(\n            parentRoute ? route.parentRoute === parentRoute : true,\n            `Expected a route with path \"${route.path}\" to be passed to its parent route \"${route.parentRoute?.id}\" in an addChildren() call, but was instead passed as a child of the \"${parentRoute?.id}\" route.`,\n          )\n        }\n\n        if (route.children) {\n          recurceCheckRoutes(route.children as Route[], route)\n        }\n      })\n    }\n\n    recurceCheckRoutes([routeTree] as Route[], undefined)\n\n    return routeTree\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === ''\n\n    const fromPathname = dest.fromCurrent\n      ? this.state.latestLocation.pathname\n      : dest.from ?? this.state.latestLocation.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? ''}`,\n    )\n\n    const fromMatches = this.matchRoutes(this.state.latestLocation.pathname, {\n      strictParseParams: true,\n    })\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      dest.__matches\n        ?.map((d) => d.route.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          nextParams = { ...nextParams!, ...fn!(nextParams!) }\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    const preSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.preSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    const postSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.postSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length\n      ? preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.state.latestLocation.search,\n        )\n      : this.state.latestLocation.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length\n      ? postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.state.latestLocation.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n    let hash =\n      dest.hash === true\n        ? this.state.latestLocation.hash\n        : functionalUpdate(dest.hash!, this.state.latestLocation.hash)\n    hash = hash ? `#${hash}` : ''\n\n    const nextState =\n      dest.state === true\n        ? this.state.latestLocation.state\n        : functionalUpdate(dest.state, this.state.latestLocation.state)!\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hash}`),\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = async (\n    location: BuildNextOptions & { replace?: boolean },\n  ) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.state.latestLocation.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    return (this.navigationPromise = new Promise((resolve) => {\n      const previousNavigationResolve = this.resolveNavigation\n\n      this.resolveNavigation = () => {\n        previousNavigationResolve()\n        resolve()\n      }\n    }))\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterStore<any, any> {\n  return {\n    status: 'idle',\n    latestLocation: null!,\n    currentLocation: null!,\n    currentMatches: [],\n    lastUpdated: Date.now(),\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type AnyRedirect = Redirect<any, any, any>\n\nexport type Redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = NavigateOptions<TRoutesInfo, TFrom, TTo> & {\n  code?: number\n}\n\nexport function redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(opts: Redirect<TRoutesInfo, TFrom, TTo>): Redirect<TRoutesInfo, TFrom, TTo> {\n  ;(opts as any).isRedirect = true\n  return opts\n}\n\nexport function isRedirect(obj: any): obj is AnyRedirect {\n  return !!obj?.isRedirect\n}\n"],"names":["defaultFetchServerDataFn","router","routeMatch","next","buildNext","to","search","d","__data","matchId","id","res","fetch","href","method","signal","abortController","ok","json","Error","Router","startedLoadingAt","Date","now","resolveNavigation","constructor","options","defaultPreloadDelay","context","undefined","stringifySearch","defaultStringifySearch","parseSearch","defaultParseSearch","fetchServerDataFn","__store","Store","getInitialRouterState","onUpdate","state","basepath","update","hash","fromCurrent","latestLocation","replace","reset","setState","s","Object","assign","mount","isServer","currentMatches","length","safeLoad","opts","history","createMemoryHistory","createBrowserHistory","parsedLocation","currentLocation","listen","routeTree","trimPath","routesById","__matches","matchRoutes","pathname","cancelMatches","pendingMatches","forEach","match","cancel","load","catch","err","console","warn","invariant","startedAt","matches","batch","strictParseParams","status","pendingLocation","loadMatches","navigationPromise","previousMatches","exiting","staying","find","dd","push","entering","filter","__onExit","params","routeSearch","error","route","onTransition","onLoaded","prevLocation","__commit","onRouteChange","getRoute","loadRoute","navigateOpts","preloadRoute","preload","existingMatches","findInRouteTree","routes","parentMatch","last","filteredRoutes","filterRoutes","matchingRoutes","findMatchInRoutes","parentRoutes","some","children","path","fuzzy","matchParams","matchPathname","fullPath","caseSensitive","parsedParams","parseParams","foundRoute","interpolatedPath","interpolatePath","RouteMatch","joinPaths","foundChildren","resolvedMatches","location","firstBadMatchIndex","Promise","all","map","index","beforeLoad","isRedirect","errorHandler","onBeforeLoadError","onError","errorHandlerErr","updatedAt","navigate","validResolvedMatches","slice","matchPromises","__load","__loadPromise","reload","resolvePath","from","cleanPath","toString","String","fromString","isExternal","URL","e","matchRoute","baseLocation","pending","includeSearch","partialDeepEqual","buildLink","target","activeOptions","preloadDelay","userPreloadDelay","disabled","type","nextOpts","defaultPreload","currentPathSplit","split","nextPathSplit","pathIsFuzzyEqual","every","i","pathTest","exact","hashTest","includeHash","searchTest","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","handleTouchStart","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","dehydrate","pick","hydrate","dehydratedRouter","dehydratedMatch","recurseRoutes","parentRoute","init","originalIndex","existingRoute","parsed","parsePathname","trimPathLeft","value","shift","score","modifier","child","sort","a","b","recurceCheckRoutes","isRoot","previousLocation","parsedSearch","searchStr","replaceEqualDeep","reverse","key","dest","fromPathname","fromMatches","prevParams","nextParams","functionalUpdate","stringifyParams","Boolean","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","reduce","prev","destSearch","postFilteredSearch","nextState","createHref","Math","random","navigateTimeout","nextAction","isSameUrl","resolve","previousNavigationResolve","window","document","createElement","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","redirect","obj"],"mappings":"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"}