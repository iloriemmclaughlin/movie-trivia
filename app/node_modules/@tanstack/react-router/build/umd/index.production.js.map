{"version":3,"file":"index.production.js","sources":["../../../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../../../node_modules/.pnpm/tiny-warning@1.0.3/node_modules/tiny-warning/dist/tiny-warning.esm.js","../../../store/build/esm/index.js","../../../router/build/esm/index.js","../../../react-store/build/esm/index.js","../../src/index.tsx"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","/**\n * store\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nclass Store {\n  listeners = new Set();\n  batching = false;\n  queue = [];\n  constructor(initialState, options) {\n    this.state = initialState;\n    this.options = options;\n  }\n  subscribe = listener => {\n    this.listeners.add(listener);\n    const unsub = this.options?.onSubscribe?.(listener, this);\n    return () => {\n      this.listeners.delete(listener);\n      unsub?.();\n    };\n  };\n  setState = updater => {\n    const previous = this.state;\n    this.state = this.options?.updateFn ? this.options.updateFn(previous)(updater) : updater(previous);\n    if (this.state === previous) return;\n    this.options?.onUpdate?.(this.state, previous);\n    this.queue.push(() => {\n      this.listeners.forEach(listener => listener(this.state, previous));\n    });\n    this.#flush();\n  };\n  #flush = () => {\n    if (this.batching) return;\n    this.queue.forEach(cb => cb());\n    this.queue = [];\n  };\n  batch = cb => {\n    this.batching = true;\n    cb();\n    this.batching = false;\n    this.#flush();\n  };\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  // if (objA instanceof Map && objB instanceof Map) {\n  //   if (objA.size !== objB.size) return false\n\n  //   for (const [key, value] of objA) {\n  //     if (!Object.is(value, objB.get(key))) {\n  //       return false\n  //     }\n  //   }\n  //   return true\n  // }\n\n  // if (objA instanceof Set && objB instanceof Set) {\n  //   if (objA.size !== objB.size) return false\n\n  //   for (const value of objA) {\n  //     if (!objB.has(value)) {\n  //       return false\n  //     }\n  //   }\n  //   return true\n  // }\n\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { Store, shallow };\n//# sourceMappingURL=index.js.map\n","/**\n * router\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport invariant from 'tiny-invariant';\nexport { default as invariant } from 'tiny-invariant';\nexport { default as warning } from 'tiny-warning';\nimport { Store } from '@tanstack/store';\n\n// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nconst popStateEvent = 'popstate';\nconst beforeUnloadEvent = 'beforeunload';\nconst beforeUnloadListener = event => {\n  event.preventDefault();\n  // @ts-ignore\n  return event.returnValue = '';\n};\nconst stopBlocking = () => {\n  removeEventListener(beforeUnloadEvent, beforeUnloadListener, {\n    capture: true\n  });\n};\nfunction createHistory(opts) {\n  let currentLocation = opts.getLocation();\n  let unsub = () => {};\n  let listeners = new Set();\n  let blockers = [];\n  let queue = [];\n  const tryFlush = () => {\n    if (blockers.length) {\n      blockers[0]?.(tryFlush, () => {\n        blockers = [];\n        stopBlocking();\n      });\n      return;\n    }\n    while (queue.length) {\n      queue.shift()?.();\n    }\n    onUpdate();\n  };\n  const queueTask = task => {\n    queue.push(task);\n    tryFlush();\n  };\n  const onUpdate = () => {\n    currentLocation = opts.getLocation();\n    listeners.forEach(listener => listener());\n  };\n  return {\n    get location() {\n      return currentLocation;\n    },\n    listen: cb => {\n      if (listeners.size === 0) {\n        unsub = opts.listener(onUpdate);\n      }\n      listeners.add(cb);\n      return () => {\n        listeners.delete(cb);\n        if (listeners.size === 0) {\n          unsub();\n        }\n      };\n    },\n    push: (path, state) => {\n      queueTask(() => {\n        opts.pushState(path, state);\n      });\n    },\n    replace: (path, state) => {\n      queueTask(() => {\n        opts.replaceState(path, state);\n      });\n    },\n    go: index => {\n      queueTask(() => {\n        opts.go(index);\n      });\n    },\n    back: () => {\n      queueTask(() => {\n        opts.back();\n      });\n    },\n    forward: () => {\n      queueTask(() => {\n        opts.forward();\n      });\n    },\n    createHref: str => opts.createHref(str),\n    block: cb => {\n      blockers.push(cb);\n      if (blockers.length === 1) {\n        addEventListener(beforeUnloadEvent, beforeUnloadListener, {\n          capture: true\n        });\n      }\n      return () => {\n        blockers = blockers.filter(b => b !== cb);\n        if (!blockers.length) {\n          stopBlocking();\n        }\n      };\n    }\n  };\n}\nfunction createBrowserHistory(opts) {\n  const getHref = opts?.getHref ?? (() => `${window.location.pathname}${window.location.hash}${window.location.search}`);\n  const createHref = opts?.createHref ?? (path => path);\n  const getLocation = () => parseLocation(getHref(), history.state);\n  return createHistory({\n    getLocation,\n    listener: onUpdate => {\n      window.addEventListener(popStateEvent, onUpdate);\n      return () => {\n        window.removeEventListener(popStateEvent, onUpdate);\n      };\n    },\n    pushState: (path, state) => {\n      window.history.pushState({\n        ...state,\n        key: createRandomKey()\n      }, '', createHref(path));\n    },\n    replaceState: (path, state) => {\n      window.history.replaceState({\n        ...state,\n        key: createRandomKey()\n      }, '', createHref(path));\n    },\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: n => window.history.go(n),\n    createHref: path => createHref(path)\n  });\n}\nfunction createHashHistory() {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: path => `#${path}`\n  });\n}\nfunction createMemoryHistory(opts = {\n  initialEntries: ['/']\n}) {\n  const entries = opts.initialEntries;\n  let index = opts.initialIndex ?? entries.length - 1;\n  let currentState = {};\n  const getLocation = () => parseLocation(entries[index], currentState);\n  return createHistory({\n    getLocation,\n    listener: () => {\n      return () => {};\n    },\n    pushState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey()\n      };\n      entries.push(path);\n      index++;\n    },\n    replaceState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey()\n      };\n      entries[index] = path;\n    },\n    back: () => {\n      index--;\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1);\n    },\n    go: n => window.history.go(n),\n    createHref: path => path\n  });\n}\nfunction parseLocation(href, state) {\n  let hashIndex = href.indexOf('#');\n  let searchIndex = href.indexOf('?');\n  return {\n    href,\n    pathname: href.substring(0, hashIndex > 0 ? searchIndex > 0 ? Math.min(hashIndex, searchIndex) : hashIndex : searchIndex > 0 ? searchIndex : href.length),\n    hash: hashIndex > -1 ? href.substring(hashIndex, searchIndex) : '',\n    search: searchIndex > -1 ? href.substring(searchIndex) : '',\n    state\n  };\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\nfunction isFunction(d) {\n  return typeof d === 'function';\n}\nfunction functionalUpdate(updater, previous) {\n  if (isFunction(updater)) {\n    return updater(previous);\n  }\n  return updater;\n}\nfunction pick(parent, keys) {\n  return keys.reduce((obj, key) => {\n    obj[key] = parent[key];\n    return obj;\n  }, {});\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nfunction replaceEqualDeep(prev, _next) {\n  if (prev === _next) {\n    return prev;\n  }\n  const next = _next;\n  const array = Array.isArray(prev) && Array.isArray(next);\n  if (array || isPlainObject(prev) && isPlainObject(next)) {\n    const prevSize = array ? prev.length : Object.keys(prev).length;\n    const nextItems = array ? next : Object.keys(next);\n    const nextSize = nextItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i];\n      copy[key] = replaceEqualDeep(prev[key], next[key]);\n      if (copy[key] === prev[key]) {\n        equalItems++;\n      }\n    }\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy;\n  }\n  return next;\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor;\n  if (typeof ctor === 'undefined') {\n    return true;\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every((item, index) => partialDeepEqual(item, b[index]));\n  }\n  return false;\n}\n\nfunction joinPaths(paths) {\n  return cleanPath(paths.filter(Boolean).join('/'));\n}\nfunction cleanPath(path) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/');\n}\nfunction trimPathLeft(path) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '');\n}\nfunction trimPathRight(path) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '');\n}\nfunction trimPath(path) {\n  return trimPathRight(trimPathLeft(path));\n}\nfunction resolvePath(basepath, base, to) {\n  base = base.replace(new RegExp(`^${basepath}`), '/');\n  to = to.replace(new RegExp(`^${basepath}`), '/');\n  let baseSegments = parsePathname(base);\n  const toSegments = parsePathname(to);\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment];\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment);\n      } else ;\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop();\n      }\n      baseSegments.pop();\n    } else if (toSegment.value === '.') {\n      return;\n    } else {\n      baseSegments.push(toSegment);\n    }\n  });\n  const joined = joinPaths([basepath, ...baseSegments.map(d => d.value)]);\n  return cleanPath(joined);\n}\nfunction parsePathname(pathname) {\n  if (!pathname) {\n    return [];\n  }\n  pathname = cleanPath(pathname);\n  const segments = [];\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  if (!pathname) {\n    return segments;\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean);\n  segments.push(...split.map(part => {\n    if (part === '$' || part === '*') {\n      return {\n        type: 'wildcard',\n        value: part\n      };\n    }\n    if (part.charAt(0) === '$') {\n      return {\n        type: 'param',\n        value: part\n      };\n    }\n    return {\n      type: 'pathname',\n      value: part\n    };\n  }));\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  return segments;\n}\nfunction interpolatePath(path, params, leaveWildcard) {\n  const interpolatedPathSegments = parsePathname(path);\n  return joinPaths(interpolatedPathSegments.map(segment => {\n    if (['$', '*'].includes(segment.value) && !leaveWildcard) {\n      return '';\n    }\n    if (segment.type === 'param') {\n      return params[segment.value.substring(1)] ?? '';\n    }\n    return segment.value;\n  }));\n}\nfunction matchPathname(basepath, currentPathname, matchLocation) {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation);\n  // const searchMatched = matchBySearch(currentLocation.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return;\n  }\n  return pathParams ?? {};\n}\nfunction matchByPath(basepath, from, matchLocation) {\n  if (!from.startsWith(basepath)) {\n    return undefined;\n  }\n  from = basepath != '/' ? from.substring(basepath.length) : from;\n  const baseSegments = parsePathname(from);\n  const to = `${matchLocation.to ?? '$'}`;\n  const routeSegments = parsePathname(to);\n  if (last(baseSegments)?.value === '/') {\n    baseSegments.pop();\n  }\n  const params = {};\n  let isMatch = (() => {\n    for (let i = 0; i < Math.max(baseSegments.length, routeSegments.length); i++) {\n      const baseSegment = baseSegments[i];\n      const routeSegment = routeSegments[i];\n      const isLastRouteSegment = i === routeSegments.length - 1;\n      const isLastBaseSegment = i === baseSegments.length - 1;\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map(d => d.value));\n            return true;\n          }\n          return false;\n        }\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true;\n          }\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false;\n              }\n            } else if (routeSegment.value.toLowerCase() !== baseSegment.value.toLowerCase()) {\n              return false;\n            }\n          }\n        }\n        if (!baseSegment) {\n          return false;\n        }\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false;\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value;\n          }\n        }\n      }\n      if (isLastRouteSegment && !isLastBaseSegment) {\n        return !!matchLocation.fuzzy;\n      }\n    }\n    return true;\n  })();\n  return isMatch ? params : undefined;\n}\n\n// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nfunction encode(obj, pfx) {\n  var k,\n    i,\n    tmp,\n    str = '';\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&');\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n        }\n      } else {\n        str && (str += '&');\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n      }\n    }\n  }\n  return (pfx || '') + str;\n}\nfunction toValue(mix) {\n  if (!mix) return '';\n  var str = decodeURIComponent(mix);\n  if (str === 'false') return false;\n  if (str === 'true') return true;\n  if (str.charAt(0) === '0') return str;\n  return +str * 0 === 0 ? +str : str;\n}\nfunction decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&');\n  while (tmp = arr.shift()) {\n    tmp = tmp.split('=');\n    k = tmp.shift();\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()));\n    } else {\n      out[k] = toValue(tmp.shift());\n    }\n  }\n  return out;\n}\n\nconst rootRouteId = '__root__';\nclass Route {\n  // Set up in this.init()\n\n  // customId!: TCustomId\n\n  // Optional\n\n  constructor(options) {\n    this.options = options || {};\n    this.isRoot = !options?.getParentRoute;\n  }\n  init = opts => {\n    this.originalIndex = opts.originalIndex;\n    this.router = opts.router;\n    const allOptions = this.options;\n    const isRoot = !allOptions?.path && !allOptions?.id;\n    this.parentRoute = this.options?.getParentRoute?.();\n    if (isRoot) {\n      this.path = rootRouteId;\n    } else {\n      invariant(this.parentRoute, `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`);\n    }\n    let path = isRoot ? rootRouteId : allOptions.path;\n\n    // If the path is anything other than an index path, trim it up\n    if (path && path !== '/') {\n      path = trimPath(path);\n    }\n    const customId = allOptions?.id || path;\n\n    // Strip the parentId prefix from the first level of children\n    let id = isRoot ? rootRouteId : joinPaths([this.parentRoute.id === rootRouteId ? '' : this.parentRoute.id, customId]);\n    if (path === rootRouteId) {\n      path = '/';\n    }\n    if (id !== rootRouteId) {\n      id = joinPaths(['/', id]);\n    }\n    const fullPath = id === rootRouteId ? '/' : trimPathRight(joinPaths([this.parentRoute.fullPath, path]));\n    this.path = path;\n    this.id = id;\n    // this.customId = customId as TCustomId\n    this.fullPath = fullPath;\n  };\n  addChildren = children => {\n    this.children = children;\n    return this;\n  };\n\n  // generate = (\n  //   options: Omit<\n  //     RouteOptions<\n  //       TParentRoute,\n  //       TCustomId,\n  //       TPath,\n  //       InferFullSearchSchema<TParentRoute>,\n  //       TSearchSchema,\n  //       TFullSearchSchema,\n  //       TParentRoute['__types']['allParams'],\n  //       TParams,\n  //       TAllParams,\n  //       TParentContext,\n  //       TAllParentContext,\n  //       TRouteContext,\n  //       TContext\n  //     >,\n  //     'path'\n  //   >,\n  // ) => {\n  //   invariant(\n  //     false,\n  //     `route.generate() is used by TanStack Router's file-based routing code generation and should not actually be called during runtime. `,\n  //   )\n  // }\n}\n\nclass RootRoute extends Route {\n  constructor(options) {\n    super(options);\n  }\n  static withRouterContext = () => {\n    return options => new RootRoute(options);\n  };\n}\n\n// const rootRoute = new RootRoute({\n//   validateSearch: () => null as unknown as { root?: boolean },\n// })\n\n// const aRoute = new Route({\n//   getParentRoute: () => rootRoute,\n//   path: 'a',\n//   validateSearch: () => null as unknown as { a?: string },\n// })\n\n// const bRoute = new Route({\n//   getParentRoute: () => aRoute,\n//   path: 'b',\n// })\n\n// const rootIsRoot = rootRoute.isRoot\n// //    ^?\n// const aIsRoot = aRoute.isRoot\n// //    ^?\n\n// const rId = rootRoute.id\n// //    ^?\n// const aId = aRoute.id\n// //    ^?\n// const bId = bRoute.id\n// //    ^?\n\n// const rPath = rootRoute.fullPath\n// //    ^?\n// const aPath = aRoute.fullPath\n// //    ^?\n// const bPath = bRoute.fullPath\n// //    ^?\n\n// const rSearch = rootRoute.__types.fullSearchSchema\n// //    ^?\n// const aSearch = aRoute.__types.fullSearchSchema\n// //    ^?\n// const bSearch = bRoute.__types.fullSearchSchema\n// //    ^?\n\n// const config = rootRoute.addChildren([aRoute.addChildren([bRoute])])\n// //    ^?\n\nconst defaultParseSearch = parseSearchWith(JSON.parse);\nconst defaultStringifySearch = stringifySearchWith(JSON.stringify);\nfunction parseSearchWith(parser) {\n  return searchStr => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1);\n    }\n    let query = decode(searchStr);\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key];\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value);\n        } catch (err) {\n          //\n        }\n      }\n    }\n    return query;\n  };\n}\nfunction stringifySearchWith(stringify) {\n  return search => {\n    search = {\n      ...search\n    };\n    if (search) {\n      Object.keys(search).forEach(key => {\n        const val = search[key];\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key];\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val);\n          } catch (err) {\n            // silent\n          }\n        }\n      });\n    }\n    const searchStr = encode(search).toString();\n    return searchStr ? `?${searchStr}` : '';\n  };\n}\n\nconst defaultFetchServerDataFn = async ({\n  router,\n  routeMatch\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: d => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id\n      }\n    })\n  });\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal\n  });\n  if (res.ok) {\n    return res.json();\n  }\n  throw new Error('Failed to fetch match data');\n};\nclass Router {\n  #unsubHistory;\n  startedLoadingAt = Date.now();\n  resolveNavigation = () => {};\n  constructor(options) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn\n    };\n    this.__store = new Store(getInitialRouterState(), {\n      onUpdate: state => {\n        this.state = state;\n      }\n    });\n    this.state = this.__store.state;\n    this.basepath = '';\n    this.update(options);\n\n    // Allow frameworks to hook into the router creation\n    this.options.Router?.(this);\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true\n    });\n    if (this.state.latestLocation.href !== next.href) {\n      this.#commitLocation({\n        ...next,\n        replace: true\n      });\n    }\n  }\n  reset = () => {\n    this.__store.setState(s => Object.assign(s, getInitialRouterState()));\n  };\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, start loading the matches\n      if (!this.state.currentMatches.length) {\n        this.safeLoad();\n      }\n    }\n    return () => {};\n  };\n  update = opts => {\n    Object.assign(this.options, opts);\n    if (!this.history || this.options.history && this.options.history !== this.history) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory();\n      }\n      this.history = this.options.history ?? (isServer ? createMemoryHistory() : createBrowserHistory());\n      const parsedLocation = this.#parseLocation();\n      this.__store.setState(s => ({\n        ...s,\n        latestLocation: parsedLocation,\n        currentLocation: parsedLocation\n      }));\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.latestLocation)\n        });\n      });\n    }\n    const {\n      basepath,\n      routeTree\n    } = this.options;\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`;\n    if (routeTree) {\n      this.routesById = {};\n      this.routeTree = this.#buildRouteTree(routeTree);\n    }\n    return this;\n  };\n  buildNext = opts => {\n    const next = this.#buildLocation(opts);\n    const __matches = this.matchRoutes(next.pathname);\n    return this.#buildLocation({\n      ...opts,\n      __matches\n    });\n  };\n  cancelMatches = () => {\n    [...this.state.currentMatches, ...(this.state.pendingMatches || [])].forEach(match => {\n      match.cancel();\n    });\n  };\n  safeLoad = opts => {\n    this.load(opts).catch(err => {\n      console.warn(err);\n      invariant(false, 'Encountered an error during router.load()! ☝️.');\n    });\n  };\n  load = async opts => {\n    let now = Date.now();\n    const startedAt = now;\n    this.startedLoadingAt = startedAt;\n\n    // Cancel any pending matches\n    this.cancelMatches();\n    let matches;\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState(s => ({\n          ...s,\n          latestLocation: opts.next\n        }));\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(this.state.latestLocation.pathname, {\n        strictParseParams: true\n      });\n      this.__store.setState(s => ({\n        ...s,\n        status: 'pending',\n        pendingMatches: matches,\n        pendingLocation: this.state.latestLocation\n      }));\n    });\n\n    // Load the matches\n    await this.loadMatches(matches, this.state.pendingLocation\n    // opts\n    );\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise;\n    }\n    const previousMatches = this.state.currentMatches;\n    const exiting = [],\n      staying = [];\n    previousMatches.forEach(d => {\n      if (matches.find(dd => dd.id === d.id)) {\n        staying.push(d);\n      } else {\n        exiting.push(d);\n      }\n    });\n    const entering = matches.filter(d => {\n      return !previousMatches.find(dd => dd.id === d.id);\n    });\n    now = Date.now();\n    exiting.forEach(d => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.state.routeSearch\n      });\n\n      // Clear non-loading error states when match leaves\n      if (d.state.status === 'error') {\n        this.__store.setState(s => ({\n          ...s,\n          status: 'idle',\n          error: undefined\n        }));\n      }\n    });\n    staying.forEach(d => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.state.routeSearch\n      });\n    });\n    entering.forEach(d => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.state.search\n      });\n    });\n    const prevLocation = this.state.currentLocation;\n    this.__store.setState(s => ({\n      ...s,\n      status: 'idle',\n      currentLocation: this.state.latestLocation,\n      currentMatches: matches,\n      pendingLocation: undefined,\n      pendingMatches: undefined\n    }));\n    matches.forEach(match => {\n      match.__commit();\n    });\n    if (prevLocation.href !== this.state.currentLocation.href) {\n      this.options.onRouteChange?.();\n    }\n    this.resolveNavigation();\n  };\n  getRoute = id => {\n    const route = this.routesById[id];\n    invariant(route, `Route with id \"${id}\" not found`);\n    return route;\n  };\n  loadRoute = async (navigateOpts = this.state.latestLocation) => {\n    const next = this.buildNext(navigateOpts);\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true\n    });\n    await this.loadMatches(matches, next);\n    return matches;\n  };\n  preloadRoute = async (navigateOpts = this.state.latestLocation) => {\n    const next = this.buildNext(navigateOpts);\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true\n    });\n    await this.loadMatches(matches, next, {\n      preload: true\n    });\n    return matches;\n  };\n  matchRoutes = (pathname, opts) => {\n    const matches = [];\n    if (!this.routeTree) {\n      return matches;\n    }\n    const existingMatches = [...this.state.currentMatches, ...(this.state.pendingMatches ?? [])];\n    const findInRouteTree = async routes => {\n      const parentMatch = last(matches);\n      let params = parentMatch?.params ?? {};\n      const filteredRoutes = this.options.filterRoutes?.(routes) ?? routes;\n      let matchingRoutes = [];\n      const findMatchInRoutes = (parentRoutes, routes) => {\n        routes.some(route => {\n          const children = route.children;\n          if (!route.path && children?.length) {\n            return findMatchInRoutes([...matchingRoutes, route], children);\n          }\n          const fuzzy = !!(route.path !== '/' || children?.length);\n          const matchParams = matchPathname(this.basepath, pathname, {\n            to: route.fullPath,\n            fuzzy,\n            caseSensitive: route.options.caseSensitive ?? this.options.caseSensitive\n          });\n          if (matchParams) {\n            let parsedParams;\n            try {\n              parsedParams = route.options.parseParams?.(matchParams) ?? matchParams;\n            } catch (err) {\n              if (opts?.strictParseParams) {\n                throw err;\n              }\n            }\n            params = {\n              ...params,\n              ...parsedParams\n            };\n          }\n          if (!!matchParams) {\n            matchingRoutes = [...parentRoutes, route];\n          }\n          return !!matchingRoutes.length;\n        });\n        return !!matchingRoutes.length;\n      };\n      findMatchInRoutes([], filteredRoutes);\n      if (!matchingRoutes.length) {\n        return;\n      }\n      matchingRoutes.forEach(foundRoute => {\n        const interpolatedPath = interpolatePath(foundRoute.path, params);\n        const matchId = interpolatePath(foundRoute.id, params, true);\n        const match = existingMatches.find(d => d.id === matchId) || new RouteMatch(this, foundRoute, {\n          id: matchId,\n          params,\n          pathname: joinPaths([this.basepath, interpolatedPath])\n        });\n        matches.push(match);\n      });\n      const foundRoute = last(matchingRoutes);\n      const foundChildren = foundRoute.children;\n      if (foundChildren?.length) {\n        findInRouteTree(foundChildren);\n      }\n    };\n    findInRouteTree([this.routeTree]);\n    return matches;\n  };\n  loadMatches = async (resolvedMatches, location, opts) => {\n    let firstBadMatchIndex;\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(resolvedMatches.map(async (match, index) => {\n        try {\n          await match.route.options.beforeLoad?.({\n            router: this,\n            match\n          });\n        } catch (err) {\n          if (isRedirect(err)) {\n            throw err;\n          }\n          firstBadMatchIndex = firstBadMatchIndex ?? index;\n          const errorHandler = match.route.options.onBeforeLoadError ?? match.route.options.onError;\n          try {\n            errorHandler?.(err);\n          } catch (errorHandlerErr) {\n            if (isRedirect(errorHandlerErr)) {\n              throw errorHandlerErr;\n            }\n            match.__store.setState(s => ({\n              ...s,\n              error: errorHandlerErr,\n              status: 'error',\n              updatedAt: Date.now()\n            }));\n            return;\n          }\n          match.__store.setState(s => ({\n            ...s,\n            error: err,\n            status: 'error',\n            updatedAt: Date.now()\n          }));\n        }\n      }));\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err);\n        }\n        return;\n      }\n      throw err; // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex);\n    const matchPromises = validResolvedMatches.map(async (match, index) => {\n      const parentMatch = validResolvedMatches[index - 1];\n      match.__load({\n        preload: opts?.preload,\n        location,\n        parentMatch\n      });\n      await match.__loadPromise;\n      if (parentMatch) {\n        await parentMatch.__loadPromise;\n      }\n    });\n    await Promise.all(matchPromises);\n  };\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true\n    });\n  };\n  resolvePath = (from, path) => {\n    return resolvePath(this.basepath, from, cleanPath(path));\n  };\n  navigate = async ({\n    from,\n    to = '',\n    search,\n    hash,\n    replace,\n    params\n  }) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to);\n    const fromString = typeof from === 'undefined' ? from : String(from);\n    let isExternal;\n    try {\n      new URL(`${toString}`);\n      isExternal = true;\n    } catch (e) {}\n    invariant(!isExternal, 'Attempting to navigate to external url with this.navigate!');\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params\n    });\n  };\n  matchRoute = (location, opts) => {\n    location = {\n      ...location,\n      to: location.to ? this.resolvePath(location.from ?? '', location.to) : undefined\n    };\n    const next = this.buildNext(location);\n    const baseLocation = opts?.pending ? this.state.pendingLocation : this.state.currentLocation;\n    if (!baseLocation) {\n      return false;\n    }\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname\n    });\n    if (!match) {\n      return false;\n    }\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false;\n    }\n    return match;\n  };\n  buildLink = ({\n    from,\n    to = '.',\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled\n  }) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`);\n      return {\n        type: 'external',\n        href: to\n      };\n    } catch (e) {}\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace\n    };\n    const next = this.buildNext(nextOpts);\n    preload = preload ?? this.options.defaultPreload;\n    const preloadDelay = userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0;\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.currentLocation.pathname.split('/');\n    const nextPathSplit = next.pathname.split('/');\n    const pathIsFuzzyEqual = nextPathSplit.every((d, i) => d === currentPathSplit[i]);\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact ? this.state.currentLocation.pathname === next.pathname : pathIsFuzzyEqual;\n    const hashTest = activeOptions?.includeHash ? this.state.currentLocation.hash === next.hash : true;\n    const searchTest = activeOptions?.includeSearch ?? true ? partialDeepEqual(this.state.currentLocation.search, next.search) : true;\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest;\n\n    // The click handler\n    const handleClick = e => {\n      if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === '_self') && e.button === 0) {\n        e.preventDefault();\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts);\n      }\n    };\n\n    // The click handler\n    const handleFocus = e => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch(err => {\n          console.warn(err);\n          console.warn('Error preloading route! ☝️');\n        });\n      }\n    };\n    const handleTouchStart = e => {\n      this.preloadRoute(nextOpts).catch(err => {\n        console.warn(err);\n        console.warn('Error preloading route! ☝️');\n      });\n    };\n    const handleEnter = e => {\n      const target = e.target || {};\n      if (preload) {\n        if (target.preloadTimeout) {\n          return;\n        }\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null;\n          this.preloadRoute(nextOpts).catch(err => {\n            console.warn(err);\n            console.warn('Error preloading route! ☝️');\n          });\n        }, preloadDelay);\n      }\n    };\n    const handleLeave = e => {\n      const target = e.target || {};\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout);\n        target.preloadTimeout = null;\n      }\n    };\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled\n    };\n  };\n  dehydrate = () => {\n    return {\n      state: {\n        ...pick(this.state, ['latestLocation', 'currentLocation', 'status', 'lastUpdated']),\n        currentMatches: this.state.currentMatches.map(match => ({\n          id: match.id,\n          state: {\n            status: match.state.status\n          }\n        }))\n      }\n    };\n  };\n  hydrate = dehydratedRouter => {\n    this.__store.setState(s => {\n      // Match the routes\n      const currentMatches = this.matchRoutes(dehydratedRouter.state.latestLocation.pathname, {\n        strictParseParams: true\n      });\n      currentMatches.forEach((match, index) => {\n        const dehydratedMatch = dehydratedRouter.state.currentMatches[index];\n        invariant(dehydratedMatch && dehydratedMatch.id === match.id, 'Oh no! There was a hydration mismatch when attempting to hydrate the state of the router! 😬');\n        match.__store.setState(s => ({\n          ...s,\n          ...dehydratedMatch.state\n        }));\n      });\n      return {\n        ...s,\n        ...dehydratedRouter.state,\n        currentMatches\n      };\n    });\n  };\n  #buildRouteTree = routeTree => {\n    const recurseRoutes = (routes, parentRoute) => {\n      routes.forEach((route, i) => {\n        route.init({\n          originalIndex: i,\n          router: this\n        });\n        const existingRoute = this.routesById[route.id];\n        invariant(!existingRoute, `Duplicate routes found with id: ${String(route.id)}`);\n        this.routesById[route.id] = route;\n        const children = route.children;\n        if (children?.length) {\n          recurseRoutes(children);\n          route.children = children.map((d, i) => {\n            const parsed = parsePathname(trimPathLeft(cleanPath(d.path ?? '/')));\n            while (parsed.length > 1 && parsed[0]?.value === '/') {\n              parsed.shift();\n            }\n            let score = 0;\n            parsed.forEach((d, i) => {\n              let modifier = 1;\n              while (i--) {\n                modifier *= 0.001;\n              }\n              if (d.type === 'pathname' && d.value !== '/') {\n                score += 1 * modifier;\n              } else if (d.type === 'param') {\n                score += 2 * modifier;\n              } else if (d.type === 'wildcard') {\n                score += 3 * modifier;\n              }\n            });\n            return {\n              child: d,\n              parsed,\n              index: i,\n              score\n            };\n          }).sort((a, b) => {\n            if (a.score !== b.score) {\n              return a.score - b.score;\n            }\n            return a.index - b.index;\n          }).map(d => d.child);\n        }\n      });\n    };\n    recurseRoutes([routeTree]);\n    const recurceCheckRoutes = (routes, parentRoute) => {\n      routes.forEach(route => {\n        if (route.isRoot) {\n          invariant(!parentRoute, 'Root routes can only be used as the root of a route tree.');\n        } else {\n          invariant(parentRoute ? route.parentRoute === parentRoute : true, `Expected a route with path \"${route.path}\" to be passed to its parent route \"${route.parentRoute?.id}\" in an addChildren() call, but was instead passed as a child of the \"${parentRoute?.id}\" route.`);\n        }\n        if (route.children) {\n          recurceCheckRoutes(route.children, route);\n        }\n      });\n    };\n    recurceCheckRoutes([routeTree], undefined);\n    return routeTree;\n  };\n  #parseLocation = previousLocation => {\n    let {\n      pathname,\n      search,\n      hash,\n      state\n    } = this.history.location;\n    const parsedSearch = this.options.parseSearch(search);\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state,\n      key: state?.key || '__init__'\n    };\n  };\n  #buildLocation = (dest = {}) => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === '';\n    const fromPathname = dest.fromCurrent ? this.state.latestLocation.pathname : dest.from ?? this.state.latestLocation.pathname;\n    let pathname = resolvePath(this.basepath ?? '/', fromPathname, `${dest.to ?? ''}`);\n    const fromMatches = this.matchRoutes(this.state.latestLocation.pathname, {\n      strictParseParams: true\n    });\n    const prevParams = {\n      ...last(fromMatches)?.params\n    };\n    let nextParams = (dest.params ?? true) === true ? prevParams : functionalUpdate(dest.params, prevParams);\n    if (nextParams) {\n      dest.__matches?.map(d => d.route.options.stringifyParams).filter(Boolean).forEach(fn => {\n        nextParams = {\n          ...nextParams,\n          ...fn(nextParams)\n        };\n      });\n    }\n    pathname = interpolatePath(pathname, nextParams ?? {});\n    const preSearchFilters = dest.__matches?.map(match => match.route.options.preSearchFilters ?? []).flat().filter(Boolean) ?? [];\n    const postSearchFilters = dest.__matches?.map(match => match.route.options.postSearchFilters ?? []).flat().filter(Boolean) ?? [];\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length ? preSearchFilters?.reduce((prev, next) => next(prev), this.state.latestLocation.search) : this.state.latestLocation.search;\n\n    // Then the link/navigate function\n    const destSearch = dest.search === true ? preFilteredSearch // Preserve resolvedFrom true\n    : dest.search ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n    : preSearchFilters?.length ? preFilteredSearch // Preserve resolvedFrom filters\n    : {};\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length ? postSearchFilters.reduce((prev, next) => next(prev), destSearch) : destSearch;\n    const search = replaceEqualDeep(this.state.latestLocation.search, postFilteredSearch);\n    const searchStr = this.options.stringifySearch(search);\n    let hash = dest.hash === true ? this.state.latestLocation.hash : functionalUpdate(dest.hash, this.state.latestLocation.hash);\n    hash = hash ? `#${hash}` : '';\n    const nextState = dest.state === true ? this.state.latestLocation.state : functionalUpdate(dest.state, this.state.latestLocation.state);\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hash}`),\n      key: dest.key\n    };\n  };\n  #commitLocation = async location => {\n    const next = this.buildNext(location);\n    const id = '' + Date.now() + Math.random();\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout);\n    let nextAction = 'replace';\n    if (!location.replace) {\n      nextAction = 'push';\n    }\n    const isSameUrl = this.state.latestLocation.href === next.href;\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace';\n    }\n    const href = `${next.pathname}${next.searchStr}${next.hash ? `#${next.hash}` : ''}`;\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state\n    });\n    return this.navigationPromise = new Promise(resolve => {\n      const previousNavigationResolve = this.resolveNavigation;\n      this.resolveNavigation = () => {\n        previousNavigationResolve();\n        resolve();\n      };\n    });\n  };\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement;\nfunction getInitialRouterState() {\n  return {\n    status: 'idle',\n    latestLocation: null,\n    currentLocation: null,\n    currentMatches: [],\n    lastUpdated: Date.now()\n  };\n}\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nfunction redirect(opts) {\n  opts.isRedirect = true;\n  return opts;\n}\nfunction isRedirect(obj) {\n  return !!obj?.isRedirect;\n}\n\nconst componentTypes = ['component', 'errorComponent', 'pendingComponent'];\nclass RouteMatch {\n  abortController = new AbortController();\n  constructor(router, route, opts) {\n    Object.assign(this, {\n      route,\n      router,\n      id: opts.id,\n      pathname: opts.pathname,\n      params: opts.params,\n      __store: new Store({\n        updatedAt: 0,\n        routeSearch: {},\n        search: {},\n        status: 'idle'\n      }, {\n        onUpdate: next => {\n          this.state = next;\n        }\n      })\n    });\n    this.state = this.__store.state;\n    componentTypes.map(async type => {\n      const component = this.route.options[type];\n      if (typeof this[type] !== 'function') {\n        this[type] = component;\n      }\n    });\n    if (this.state.status === 'idle' && !this.#hasLoaders()) {\n      this.__store.setState(s => ({\n        ...s,\n        status: 'success'\n      }));\n    }\n  }\n  #hasLoaders = () => {\n    return !!(this.route.options.onLoad || componentTypes.some(d => this.route.options[d]?.preload));\n  };\n  __commit = () => {\n    const {\n      routeSearch,\n      search,\n      context,\n      routeContext\n    } = this.#resolveInfo({\n      location: this.router.state.currentLocation\n    });\n    this.context = context;\n    this.routeContext = routeContext;\n    this.__store.setState(s => ({\n      ...s,\n      routeSearch: replaceEqualDeep(s.routeSearch, routeSearch),\n      search: replaceEqualDeep(s.search, search)\n    }));\n  };\n  cancel = () => {\n    this.abortController?.abort();\n  };\n  #resolveSearchInfo = opts => {\n    // Validate the search params and stabilize them\n    const parentSearchInfo = this.parentMatch ? this.parentMatch.#resolveSearchInfo(opts) : {\n      search: opts.location.search,\n      routeSearch: opts.location.search\n    };\n    try {\n      const validator = typeof this.route.options.validateSearch === 'object' ? this.route.options.validateSearch.parse : this.route.options.validateSearch;\n      const routeSearch = validator?.(parentSearchInfo.search) ?? {};\n      const search = {\n        ...parentSearchInfo.search,\n        ...routeSearch\n      };\n      return {\n        routeSearch,\n        search\n      };\n    } catch (err) {\n      if (isRedirect(err)) {\n        throw err;\n      }\n      const errorHandler = this.route.options.onValidateSearchError ?? this.route.options.onError;\n      errorHandler?.(err);\n      const error = new Error('Invalid search params found', {\n        cause: err\n      });\n      error.code = 'INVALID_SEARCH_PARAMS';\n      throw error;\n    }\n  };\n  #resolveInfo = opts => {\n    const {\n      search,\n      routeSearch\n    } = this.#resolveSearchInfo(opts);\n    try {\n      const routeContext = this.route.options.getContext?.({\n        parentContext: this.parentMatch?.routeContext ?? {},\n        context: this.parentMatch?.context ?? this.router?.options.context ?? {},\n        params: this.params,\n        search\n      }) || {};\n      const context = {\n        ...(this.parentMatch?.context ?? this.router?.options.context),\n        ...routeContext\n      };\n      return {\n        routeSearch,\n        search,\n        context,\n        routeContext\n      };\n    } catch (err) {\n      this.route.options.onError?.(err);\n      throw err;\n    }\n  };\n  __load = async opts => {\n    this.parentMatch = opts.parentMatch;\n    let info;\n    try {\n      info = this.#resolveInfo(opts);\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.router.navigate(err);\n        }\n        return;\n      }\n      this.__store.setState(s => ({\n        ...s,\n        status: 'error',\n        error: err\n      }));\n\n      // Do not proceed with loading the route\n      return;\n    }\n    const {\n      routeSearch,\n      search,\n      context,\n      routeContext\n    } = info;\n\n    // If the match is invalid, errored or idle, trigger it to load\n    if (this.state.status === 'pending') {\n      return;\n    }\n\n    // TODO: Should load promises be tracked based on location?\n    this.__loadPromise = Promise.resolve().then(async () => {\n      const loadId = '' + Date.now() + Math.random();\n      this.#latestId = loadId;\n      const checkLatest = () => {\n        return loadId !== this.#latestId ? this.__loadPromise : undefined;\n      };\n      let latestPromise;\n\n      // If the match was in an error state, set it\n      // to a loading state again. Otherwise, keep it\n      // as loading or resolved\n      if (this.state.status === 'idle') {\n        this.__store.setState(s => ({\n          ...s,\n          status: 'pending'\n        }));\n      }\n      const componentsPromise = (async () => {\n        // then run all component and data loaders in parallel\n        // For each component type, potentially load it asynchronously\n\n        await Promise.all(componentTypes.map(async type => {\n          const component = this.route.options[type];\n          if (this[type]?.preload) {\n            this[type] = await this.router.options.loadComponent(component);\n          }\n        }));\n      })();\n      const dataPromise = Promise.resolve().then(() => {\n        if (this.route.options.onLoad) {\n          return this.route.options.onLoad({\n            params: this.params,\n            routeSearch,\n            search,\n            signal: this.abortController.signal,\n            preload: !!opts?.preload,\n            routeContext: routeContext,\n            context: context\n          });\n        }\n        return;\n      });\n      try {\n        await Promise.all([componentsPromise, dataPromise]);\n        if (latestPromise = checkLatest()) return await latestPromise;\n        this.__store.setState(s => ({\n          ...s,\n          error: undefined,\n          status: 'success',\n          updatedAt: Date.now()\n        }));\n      } catch (err) {\n        if (isRedirect(err)) {\n          if (!opts?.preload) {\n            this.router.navigate(err);\n          }\n          return;\n        }\n        const errorHandler = this.route.options.onLoadError ?? this.route.options.onError;\n        try {\n          errorHandler?.(err);\n        } catch (errorHandlerErr) {\n          if (isRedirect(errorHandlerErr)) {\n            if (!opts?.preload) {\n              this.router.navigate(errorHandlerErr);\n            }\n            return;\n          }\n          this.__store.setState(s => ({\n            ...s,\n            error: errorHandlerErr,\n            status: 'error',\n            updatedAt: Date.now()\n          }));\n          return;\n        }\n        this.__store.setState(s => ({\n          ...s,\n          error: err,\n          status: 'error',\n          updatedAt: Date.now()\n        }));\n      } finally {\n        delete this.__loadPromise;\n      }\n    });\n    return this.__loadPromise;\n  };\n  #latestId = '';\n}\n\nexport { RootRoute, Route, RouteMatch, Router, cleanPath, createBrowserHistory, createHashHistory, createMemoryHistory, decode, defaultFetchServerDataFn, defaultParseSearch, defaultStringifySearch, encode, functionalUpdate, interpolatePath, isPlainObject, isRedirect, joinPaths, last, matchByPath, matchPathname, parsePathname, parseSearchWith, partialDeepEqual, pick, redirect, replaceEqualDeep, resolvePath, rootRouteId, stringifySearchWith, trimPath, trimPathLeft, trimPathRight };\n//# sourceMappingURL=index.js.map\n","/**\n * react-store\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { shallow } from '@tanstack/store';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n\nfunction useStore(store, selector = d => d, compareShallow) {\n  const slice = useSyncExternalStoreWithSelector(store.subscribe, () => store.state, () => store.state, selector, compareShallow ? shallow : undefined);\n  return slice;\n}\n\nexport { useStore };\n//# sourceMappingURL=index.js.map\n","import * as React from 'react'\n\nimport {\n  RegisteredRoutesInfo,\n  RegisteredRouter,\n  RouterStore,\n  last,\n  warning,\n  RouterOptions,\n  RouteMatch,\n  MatchRouteOptions,\n  AnyRoutesInfo,\n  DefaultRoutesInfo,\n  functionalUpdate,\n  RoutesInfo,\n  ValidFromPath,\n  LinkOptions,\n  RouteByPath,\n  ResolveRelativePath,\n  NoInfer,\n  ToOptions,\n  invariant,\n  Router,\n  AnyRootRoute,\n  RootRoute,\n  AnyRouteMatch,\n  NavigateOptions,\n  RouterConstructorOptions,\n} from '@tanstack/router'\nimport { useStore } from '@tanstack/react-store'\n\n//\n\nexport * from '@tanstack/router'\n\nexport { useStore }\n\n//\n\ntype ReactNode = any\n\nexport type SyncRouteComponent<TProps = {}> = (props: TProps) => ReactNode\n\nexport type RouteComponent<TProps = {}> = SyncRouteComponent<TProps> & {\n  preload?: () => Promise<void>\n}\n\nexport function lazy(\n  importer: () => Promise<{ default: SyncRouteComponent }>,\n): RouteComponent {\n  const lazyComp = React.lazy(importer as any)\n  let preloaded: Promise<SyncRouteComponent>\n\n  const finalComp = lazyComp as unknown as RouteComponent\n\n  finalComp.preload = async () => {\n    if (!preloaded) {\n      await importer()\n    }\n  }\n\n  return finalComp\n}\n\nexport type LinkPropsOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkOptions<RegisteredRoutesInfo, TFrom, TTo> & {\n  // A function that returns additional props for the `active` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  activeProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n  // A function that returns additional props for the `inactive` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  inactiveProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n}\n\nexport type MakeUseMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> & MatchRouteOptions\n\nexport type MakeMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> &\n  MatchRouteOptions & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | ReactNode\n      | ((\n          params: RouteByPath<\n            RegisteredRoutesInfo,\n            ResolveRelativePath<TFrom, NoInfer<TTo>>\n          >['__types']['allParams'],\n        ) => ReactNode)\n  }\n\nexport type MakeLinkPropsOptions<\n  TFrom extends ValidFromPath<RegisteredRoutesInfo> = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> & React.AnchorHTMLAttributes<HTMLAnchorElement>\n\nexport type MakeLinkOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> &\n  React.AnchorHTMLAttributes<HTMLAnchorElement> &\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'children'> & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?: ReactNode | ((state: { isActive: boolean }) => ReactNode)\n  }\n\ndeclare module '@tanstack/router' {\n  interface FrameworkGenerics {\n    Component: RouteComponent\n    ErrorComponent: RouteComponent<{\n      error: Error\n      info: { componentStack: string }\n    }>\n  }\n\n  interface RouterOptions<TRouteTree> {\n    // ssrFooter?: () => JSX.Element | Node\n  }\n\n  interface FrameworkRouteOptions {\n    wrapInSuspense?: boolean\n  }\n}\n\nexport type PromptProps = {\n  message: string\n  condition?: boolean | any\n  children?: ReactNode\n}\n\n//\n\nexport function useLinkProps<\n  TFrom extends ValidFromPath<RegisteredRoutesInfo> = '/',\n  TTo extends string = '',\n>(\n  options: MakeLinkPropsOptions<TFrom, TTo>,\n): React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  const router = useRouterContext()\n\n  const {\n    // custom props\n    type,\n    children,\n    target,\n    activeProps = () => ({ className: 'active' }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    disabled,\n    // fromCurrent,\n    hash,\n    search,\n    params,\n    to = '.',\n    preload,\n    preloadDelay,\n    replace,\n    // element props\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ...rest\n  } = options\n\n  const linkInfo = router.buildLink(options as any)\n\n  if (linkInfo.type === 'external') {\n    const { href } = linkInfo\n    return { href }\n  }\n\n  const {\n    handleClick,\n    handleFocus,\n    handleEnter,\n    handleLeave,\n    handleTouchStart,\n    isActive,\n    next,\n  } = linkInfo\n\n  const reactHandleClick = (e: Event) => {\n    if (React.startTransition) {\n      // This is a hack for react < 18\n      React.startTransition(() => {\n        handleClick(e)\n      })\n    } else {\n      handleClick(e)\n    }\n  }\n\n  const composeHandlers =\n    (handlers: (undefined | ((e: any) => void))[]) =>\n    (e: React.SyntheticEvent) => {\n      if (e.persist) e.persist()\n      handlers.filter(Boolean).forEach((handler) => {\n        if (e.defaultPrevented) return\n        handler!(e)\n      })\n    }\n\n  // Get the active props\n  const resolvedActiveProps: React.HTMLAttributes<HTMLAnchorElement> = isActive\n    ? functionalUpdate(activeProps as any, {}) ?? {}\n    : {}\n\n  // Get the inactive props\n  const resolvedInactiveProps: React.HTMLAttributes<HTMLAnchorElement> =\n    isActive ? {} : functionalUpdate(inactiveProps, {}) ?? {}\n\n  return {\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    ...rest,\n    href: disabled ? undefined : next.href,\n    onClick: composeHandlers([onClick, reactHandleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    target,\n    style: {\n      ...style,\n      ...resolvedActiveProps.style,\n      ...resolvedInactiveProps.style,\n    },\n    className:\n      [\n        className,\n        resolvedActiveProps.className,\n        resolvedInactiveProps.className,\n      ]\n        .filter(Boolean)\n        .join(' ') || undefined,\n    ...(disabled\n      ? {\n          role: 'link',\n          'aria-disabled': true,\n        }\n      : undefined),\n    ['data-status']: isActive ? 'active' : undefined,\n  }\n}\n\nexport interface LinkFn<\n  TDefaultFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TDefaultTo extends string = '',\n> {\n  <\n    TFrom extends RegisteredRoutesInfo['routePaths'] = TDefaultFrom,\n    TTo extends string = TDefaultTo,\n  >(\n    props: MakeLinkOptions<TFrom, TTo> & React.RefAttributes<HTMLAnchorElement>,\n  ): ReactNode\n}\n\nexport const Link: LinkFn = React.forwardRef((props: any, ref) => {\n  const linkProps = useLinkProps(props)\n\n  return (\n    <a\n      {...{\n        ref: ref as any,\n        ...linkProps,\n        children:\n          typeof props.children === 'function'\n            ? props.children({\n                isActive: (linkProps as any)['data-status'] === 'active',\n              })\n            : props.children,\n      }}\n    />\n  )\n}) as any\n\nexport function Navigate<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(props: NavigateOptions<RegisteredRoutesInfo, TFrom, TTo>): null {\n  const router = useRouterContext()\n\n  React.useLayoutEffect(() => {\n    router.navigate(props as any)\n  }, [])\n\n  return null\n}\n\ntype MatchesContextValue = AnyRouteMatch[]\n\nexport const matchesContext = React.createContext<MatchesContextValue>(null!)\nexport const routerContext = React.createContext<{ router: RegisteredRouter }>(\n  null!,\n)\n\nexport type MatchesProviderProps = {\n  value: MatchesContextValue\n  children: ReactNode\n}\n\nexport class ReactRouter<\n  TRouteConfig extends AnyRootRoute = RootRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteConfig>,\n> extends Router<TRouteConfig, TRoutesInfo> {\n  constructor(opts: RouterConstructorOptions<TRouteConfig>) {\n    super({\n      ...opts,\n      loadComponent: async (component) => {\n        if (component.preload) {\n          await component.preload()\n        }\n\n        return component as any\n      },\n    })\n  }\n}\n\nexport type RouterProps<\n  TRouteConfig extends AnyRootRoute = RootRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n> = RouterOptions<TRouteConfig> & {\n  router: Router<TRouteConfig, TRoutesInfo>\n}\n\nexport function RouterProvider<\n  TRouteConfig extends AnyRootRoute = RootRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n>({ router, ...rest }: RouterProps<TRouteConfig, TRoutesInfo>) {\n  router.update(rest)\n\n  const currentMatches = useStore(router.__store, (s) => s.currentMatches)\n\n  React.useEffect(router.mount, [router])\n\n  return (\n    <routerContext.Provider value={{ router: router as any }}>\n      <matchesContext.Provider value={[undefined!, ...currentMatches]}>\n        <CatchBoundary\n          errorComponent={ErrorComponent}\n          onCatch={() => {\n            warning(\n              false,\n              `Error in router! Consider setting an 'errorComponent' in your RootRoute! 👍`,\n            )\n          }}\n        >\n          <Outlet />\n        </CatchBoundary>\n      </matchesContext.Provider>\n    </routerContext.Provider>\n  )\n}\n\nexport function useRouterContext(): RegisteredRouter {\n  const value = React.useContext(routerContext)\n  warning(value, 'useRouter must be used inside a <Router> component!')\n\n  useStore(value.router.__store)\n\n  return value.router\n}\n\nexport function useRouter<T = RouterStore>(\n  track?: (state: Router['__store']) => T,\n  shallow?: boolean,\n): RegisteredRouter {\n  const router = useRouterContext()\n  useStore(router.__store, track as any, shallow)\n  return router\n}\n\nexport function useMatches(): RouteMatch[] {\n  return React.useContext(matchesContext)\n}\n\nexport function useMatch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TRouteMatch = RouteMatch<\n    RegisteredRoutesInfo,\n    RegisteredRoutesInfo['routesById'][TFrom]\n  >,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  track?: (match: TRouteMatch) => any\n  shallow?: boolean\n}): TStrict extends true ? TRouteMatch : TRouteMatch | undefined {\n  const router = useRouterContext()\n  const nearestMatch = useMatches()[0]!\n  const match = opts?.from\n    ? router.state.currentMatches.find((d) => d.route.id === opts?.from)\n    : nearestMatch\n\n  invariant(\n    match,\n    `Could not find ${\n      opts?.from ? `an active match from \"${opts.from}\"` : 'a nearest match!'\n    }`,\n  )\n\n  if (opts?.strict ?? true) {\n    invariant(\n      nearestMatch.route.id == match?.route.id,\n      `useMatch(\"${\n        match?.route.id as string\n      }\") is being called in a component that is meant to render the '${\n        nearestMatch.route.id\n      }' route. Did you mean to 'useMatch(\"${\n        match?.route.id as string\n      }\", { strict: false })' or 'useRoute(\"${\n        match?.route.id as string\n      }\")' instead?`,\n    )\n  }\n\n  useStore(\n    match!.__store as any,\n    (d) => opts?.track?.(match as any) ?? match,\n    opts?.shallow,\n  )\n\n  return match as any\n}\n\nexport function useRoute<\n  TId extends keyof RegisteredRoutesInfo['routesById'] = '/',\n>(routeId: TId): RegisteredRoutesInfo['routesById'][TId] {\n  const router = useRouterContext()\n  const resolvedRoute = router.getRoute(routeId as any)\n\n  invariant(\n    resolvedRoute,\n    `Could not find a route for route \"${\n      routeId as string\n    }\"! Did you forget to add it to your route?`,\n  )\n\n  return resolvedRoute as any\n}\n\nexport function useSearch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TSearch = RegisteredRoutesInfo['routesById'][TFrom]['__types']['fullSearchSchema'],\n  TSelected = TSearch,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  track?: (search: TSearch) => TSelected\n}): TStrict extends true ? TSelected : TSelected | undefined {\n  const { track, ...matchOpts } = opts as any\n  const match = useMatch(matchOpts)\n  useStore(match.__store, (d: any) => opts?.track?.(d.search) ?? d.search, true)\n\n  return (match as unknown as RouteMatch).state.search as any\n}\n\nexport function useParams<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'] = '/',\n  TDefaultSelected = RegisteredRoutesInfo['allParams'] &\n    RegisteredRoutesInfo['routesById'][TFrom]['__types']['allParams'],\n  TSelected = TDefaultSelected,\n>(opts?: {\n  from: TFrom\n  track?: (search: TDefaultSelected) => TSelected\n}): TSelected {\n  const router = useRouterContext()\n  useStore(\n    router.__store,\n    (d) => {\n      const params = last(d.currentMatches)?.params as any\n      return opts?.track?.(params) ?? params\n    },\n    true,\n  )\n\n  return last(router.state.currentMatches)?.params as any\n}\n\nexport function useNavigate<\n  TDefaultFrom extends keyof RegisteredRoutesInfo['routesById'] = '/',\n>(defaultOpts?: { from?: TDefaultFrom }) {\n  const router = useRouterContext()\n  return React.useCallback(\n    <\n      TFrom extends keyof RegisteredRoutesInfo['routesById'] = TDefaultFrom,\n      TTo extends string = '',\n    >(\n      opts?: MakeLinkOptions<TFrom, TTo>,\n    ) => {\n      return router.navigate({ ...defaultOpts, ...(opts as any) })\n    },\n    [],\n  )\n}\n\nexport function useMatchRoute() {\n  const router = useRouterContext()\n\n  return React.useCallback(\n    <\n      TFrom extends ValidFromPath<RegisteredRoutesInfo> = '/',\n      TTo extends string = '',\n    >(\n      opts: MakeUseMatchRouteOptions<TFrom, TTo>,\n    ) => {\n      const { pending, caseSensitive, ...rest } = opts\n\n      return router.matchRoute(rest as any, {\n        pending,\n        caseSensitive,\n      })\n    },\n    [],\n  )\n}\n\nexport function MatchRoute<\n  TFrom extends ValidFromPath<RegisteredRoutesInfo> = '/',\n  TTo extends string = '',\n>(props: MakeMatchRouteOptions<TFrom, TTo>): any {\n  const matchRoute = useMatchRoute()\n  const params = matchRoute(props)\n\n  if (!params) {\n    return null\n  }\n\n  if (typeof props.children === 'function') {\n    return (props.children as any)(params)\n  }\n\n  return params ? props.children : null\n}\n\nexport function Outlet() {\n  const matches = useMatches().slice(1)\n  const match = matches[0]\n\n  if (!match) {\n    return null\n  }\n\n  return <SubOutlet matches={matches} match={match} />\n}\n\nfunction SubOutlet({\n  matches,\n  match,\n}: {\n  matches: RouteMatch[]\n  match: RouteMatch\n}) {\n  const router = useRouterContext()\n  useStore(match!.__store, (store) => [store.status, store.error], true)\n\n  const defaultPending = React.useCallback(() => null, [])\n\n  const PendingComponent = (match.pendingComponent ??\n    router.options.defaultPendingComponent ??\n    defaultPending) as any\n\n  const errorComponent =\n    match.errorComponent ?? router.options.defaultErrorComponent\n\n  const ResolvedSuspenseBoundary =\n    match.route.options.wrapInSuspense ?? true ? React.Suspense : SafeFragment\n  const ResolvedCatchBoundary = errorComponent ? CatchBoundary : SafeFragment\n\n  return (\n    <matchesContext.Provider value={matches}>\n      <ResolvedSuspenseBoundary fallback={<PendingComponent />}>\n        <ResolvedCatchBoundary\n          key={match.route.id}\n          errorComponent={errorComponent}\n          onCatch={() => {\n            warning(false, `Error in route match: ${match.id}`)\n          }}\n        >\n          <Inner match={match} />\n        </ResolvedCatchBoundary>\n      </ResolvedSuspenseBoundary>\n    </matchesContext.Provider>\n  )\n}\n\nfunction Inner(props: { match: RouteMatch }): any {\n  const router = useRouterContext()\n\n  if (props.match.state.status === 'error') {\n    throw props.match.state.error\n  }\n\n  if (props.match.state.status === 'success') {\n    return React.createElement(\n      (props.match.component as any) ??\n        router.options.defaultComponent ??\n        Outlet,\n    )\n  }\n\n  if (props.match.state.status === 'pending') {\n    throw props.match.__loadPromise\n  }\n\n  invariant(\n    false,\n    'Idle routeMatch status encountered during rendering! You should never see this. File an issue!',\n  )\n}\n\nfunction SafeFragment(props: any) {\n  return <>{props.children}</>\n}\n\n// This is the messiest thing ever... I'm either seriously tired (likely) or\n// there has to be a better way to reset error boundaries when the\n// router's location key changes.\n\nclass CatchBoundary extends React.Component<{\n  children: any\n  errorComponent: any\n  onCatch: (error: any, info: any) => void\n}> {\n  state = {\n    error: false,\n    info: undefined,\n  }\n  componentDidCatch(error: any, info: any) {\n    this.props.onCatch(error, info)\n    console.error(error)\n    this.setState({\n      error,\n      info,\n    })\n  }\n  render() {\n    return (\n      <CatchBoundaryInner\n        {...this.props}\n        errorState={this.state}\n        reset={() => this.setState({})}\n      />\n    )\n  }\n}\n\nfunction CatchBoundaryInner(props: {\n  children: any\n  errorComponent: any\n  errorState: { error: unknown; info: any }\n  reset: () => void\n}) {\n  const [activeErrorState, setActiveErrorState] = React.useState(\n    props.errorState,\n  )\n  const router = useRouterContext()\n  const errorComponent = props.errorComponent ?? ErrorComponent\n  const prevKeyRef = React.useRef('' as any)\n\n  React.useEffect(() => {\n    if (activeErrorState) {\n      if (router.state.currentLocation.key !== prevKeyRef.current) {\n        setActiveErrorState({} as any)\n      }\n    }\n\n    prevKeyRef.current = router.state.currentLocation.key\n  }, [activeErrorState, router.state.currentLocation.key])\n\n  React.useEffect(() => {\n    if (props.errorState.error) {\n      setActiveErrorState(props.errorState)\n    }\n    // props.reset()\n  }, [props.errorState.error])\n\n  if (props.errorState.error && activeErrorState.error) {\n    return React.createElement(errorComponent, activeErrorState)\n  }\n\n  return props.children\n}\n\nexport function ErrorComponent({ error }: { error: any }) {\n  return (\n    <div style={{ padding: '.5rem', maxWidth: '100%' }}>\n      <strong style={{ fontSize: '1.2rem' }}>Something went wrong!</strong>\n      <div style={{ height: '.5rem' }} />\n      <div>\n        <pre\n          style={{\n            fontSize: '.7em',\n            border: '1px solid red',\n            borderRadius: '.25rem',\n            padding: '.5rem',\n            color: 'red',\n            overflow: 'auto',\n          }}\n        >\n          {error.message ? <code>{error.message}</code> : null}\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function useBlocker(\n  message: string,\n  condition: boolean | any = true,\n): void {\n  const router = useRouter()\n\n  React.useEffect(() => {\n    if (!condition) return\n\n    let unblock = router.history.block((retry, cancel) => {\n      if (window.confirm(message)) {\n        unblock()\n        retry()\n      } else {\n        cancel()\n      }\n    })\n\n    return unblock\n  })\n}\n\nexport function Block({ message, condition, children }: PromptProps) {\n  useBlocker(message, condition)\n  return (children ?? null) as ReactNode\n}\n"],"names":["invariant","condition","message","Error","warning","Store","listeners","Set","batching","queue","constructor","initialState","options","this","state","subscribe","listener","add","unsub","onSubscribe","delete","setState","updater","previous","updateFn","onUpdate","push","forEach","flush","cb","batch","shallow","objA","objB","Object","is","keysA","keys","length","i","prototype","hasOwnProperty","call","popStateEvent","beforeUnloadEvent","beforeUnloadListener","event","preventDefault","returnValue","stopBlocking","removeEventListener","capture","createHistory","opts","currentLocation","getLocation","blockers","tryFlush","shift","queueTask","task","location","listen","size","path","pushState","replace","replaceState","go","index","back","forward","createHref","str","block","addEventListener","filter","b","createBrowserHistory","getHref","window","pathname","hash","search","parseLocation","history","key","createRandomKey","n","createMemoryHistory","initialEntries","entries","initialIndex","currentState","Math","min","href","hashIndex","indexOf","searchIndex","substring","random","toString","last","arr","functionalUpdate","pick","parent","reduce","obj","replaceEqualDeep","prev","_next","next","array","Array","isArray","isPlainObject","prevSize","nextItems","nextSize","copy","equalItems","o","hasObjectPrototype","ctor","prot","partialDeepEqual","a","some","every","item","joinPaths","paths","cleanPath","Boolean","join","trimPathLeft","trimPathRight","trimPath","resolvePath","basepath","base","to","RegExp","baseSegments","parsePathname","toSegments","toSegment","value","pop","map","d","segments","slice","type","split","part","charAt","interpolatePath","params","leaveWildcard","segment","includes","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","from","startsWith","routeSegments","max","baseSegment","routeSegment","isLastRouteSegment","isLastBaseSegment","caseSensitive","toLowerCase","fuzzy","undefined","encode","pfx","k","tmp","encodeURIComponent","toValue","mix","decodeURIComponent","decode","out","concat","rootRouteId","Route","isRoot","getParentRoute","init","originalIndex","router","allOptions","id","parentRoute","customId","fullPath","addChildren","children","RootRoute","super","static","defaultParseSearch","parseSearchWith","JSON","parse","defaultStringifySearch","stringifySearchWith","stringify","parser","searchStr","query","err","val","defaultFetchServerDataFn","async","routeMatch","buildNext","__data","matchId","res","fetch","method","signal","abortController","ok","json","Router","unsubHistory","startedLoadingAt","Date","now","resolveNavigation","defaultPreloadDelay","context","stringifySearch","parseSearch","fetchServerDataFn","__store","getInitialRouterState","update","fromCurrent","latestLocation","commitLocation","reset","s","assign","mount","isServer","currentMatches","safeLoad","parsedLocation","routeTree","routesById","buildRouteTree","buildLocation","__matches","matchRoutes","cancelMatches","pendingMatches","match","cancel","load","catch","console","warn","startedAt","matches","strictParseParams","status","pendingLocation","loadMatches","navigationPromise","previousMatches","exiting","staying","find","dd","entering","__onExit","routeSearch","error","route","onTransition","onLoaded","prevLocation","__commit","onRouteChange","getRoute","loadRoute","navigateOpts","preloadRoute","preload","existingMatches","findInRouteTree","filteredRoutes","filterRoutes","routes","matchingRoutes","findMatchInRoutes","parentRoutes","matchParams","parsedParams","parseParams","foundRoute","interpolatedPath","RouteMatch","foundChildren","resolvedMatches","firstBadMatchIndex","Promise","all","beforeLoad","isRedirect","errorHandler","onBeforeLoadError","onError","errorHandlerErr","updatedAt","navigate","validResolvedMatches","matchPromises","parentMatch","__load","__loadPromise","reload","String","fromString","isExternal","URL","e","matchRoute","baseLocation","pending","includeSearch","buildLink","target","activeOptions","preloadDelay","userPreloadDelay","disabled","nextOpts","defaultPreload","currentPathSplit","pathIsFuzzyEqual","pathTest","exact","hashTest","includeHash","searchTest","handleFocus","handleClick","metaKey","altKey","ctrlKey","shiftKey","isCtrlEvent","defaultPrevented","button","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","handleTouchStart","isActive","dehydrate","hydrate","dehydratedRouter","dehydratedMatch","recurseRoutes","parsed","score","modifier","child","sort","recurceCheckRoutes","previousLocation","parsedSearch","reverse","dest","fromPathname","prevParams","nextParams","stringifyParams","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","destSearch","postFilteredSearch","navigateTimeout","nextAction","resolve","previousNavigationResolve","document","createElement","lastUpdated","componentTypes","AbortController","component","hasLoaders","onLoad","routeContext","resolveInfo","abort","resolveSearchInfo","parentSearchInfo","validateSearch","onValidateSearchError","cause","code","getContext","parentContext","info","then","loadId","latestId","checkLatest","latestPromise","componentsPromise","loadComponent","dataPromise","onLoadError","useStore","store","selector","compareShallow","useSyncExternalStoreWithSelector","useLinkProps","useRouterContext","activeProps","className","inactiveProps","style","onClick","onFocus","onMouseEnter","onMouseLeave","onTouchStart","rest","linkInfo","composeHandlers","handlers","persist","handler","resolvedActiveProps","resolvedInactiveProps","React","startTransition","role","Link","forwardRef","props","ref","linkProps","_extends","matchesContext","createContext","routerContext","useContext","useRouter","track","useMatches","useMatch","nearestMatch","strict","useMatchRoute","useCallback","Outlet","SubOutlet","defaultPending","PendingComponent","pendingComponent","defaultPendingComponent","errorComponent","defaultErrorComponent","ResolvedSuspenseBoundary","wrapInSuspense","Suspense","SafeFragment","ResolvedCatchBoundary","CatchBoundary","Provider","fallback","onCatch","Inner","defaultComponent","Component","componentDidCatch","render","CatchBoundaryInner","errorState","activeErrorState","setActiveErrorState","useState","ErrorComponent","prevKeyRef","useRef","useEffect","current","padding","maxWidth","fontSize","height","border","borderRadius","color","overflow","useBlocker","unblock","retry","confirm","useLayoutEffect","importer","finalComp","lazy","defaultOpts","routeId","resolvedRoute","matchOpts"],"mappings":"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"}